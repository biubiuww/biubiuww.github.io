[{"content":"前言 Vultr作为一家领先的云计算服务提供商，在之前开启了免费计划\u0026hellip;（也是很久没有登上去看过，最近才发现）\n应该有一部分是用他家的VPS开始的漫漫怕坑路吧\u0026hellip;hahaha\n免费计划内容 硬件指标：1vCPU / 512MB RAM / 10GB SSD / IPv4 地址\n可用地区：迈阿密、西雅图、法兰克福\n申请地址 1、在申请这个之前，你至少需要一个Vultr账号，账号注册就不做过多赘述。一般来说鹅厂的邮箱会大大的降低收到邮件的概率\u0026hellip;\n2、 注册地址可以 点我是传送门 PS：踩我的这个连接过去，还能得到 $100 的券，这个券开VPS可以自动抵扣，哪怕最后没有申请到免费计划，咱也不亏。白给100刀，不拿有点亏得慌\u0026hellip;\n3、 如果你已经有了账号，可以点我是传送门，进入申请页面，填写申请，然后静静等待通知就可以。\n创建实例 实例的创建可以在后台的\u0026quot;Products\u0026quot; - \u0026ldquo;Compute\u0026rdquo; - \u0026ldquo;Deploy Server\u0026rdquo; 中开始实例创建的配置选择页面。\n如果你是免费计划，那么当你切换到 \u0026ldquo;Cloud Compute - Shared CPU\u0026rdquo; 选项中，然后在\u0026quot;Choose Plan\u0026quot;中找到对应地区就可以看到免费实例的标签了。\n如果你还没有通过免费计划，但是你是踩我连接新注册的呢，那就根据自己的需求去选择合适的配置及地区就可以啦。\n注意事项 1、免费计划目前通过后只有1年 时间，如果过期了，要记得及时取消自己的实例\n2、目前Vultr支持常见的支付方式\n信用卡\n支付宝\nPayPal\n","date":"2024-04-02T14:23:03+08:00","image":"https://biubiuww.github.io/post/2024/pic/vultr_free.png","permalink":"https://biubiuww.github.io/post/2024/04/1/","title":"Vultr免费套餐计划"},{"content":"前文 最近在学习Django，其中通过使用 Python 类来定义模型，使得模型的定义非常简洁易用。\n于是顺手整理了一下模型的不同字段适用于那些情况。\nDjango : 4.2.11 Python : 3.9 Django模型字段 选择字段类型时，需要考虑以下因素（仅个人意见）：\n要存储的数据类型。 数据的大小和长度。 数据的格式和结构。 数据的用途和使用场景。 字符串字段 参数：\nmax_length: 字符串的最大长度。 null: 是否允许字段为空。 blank: 是否允许字段为空白字符串。 default: 字段的默认值。 help_text: 字段的帮助文本 CharField： 存储固定长度的字符串，例：姓名、地址、标题、简介等\n示例： CharField(max_length=255, null=True, blank=True, default=\u0026quot;John Doe\u0026quot;, help_text=\u0026quot;The user's name.\u0026quot;)\nTextField： 存储可变长度的字符串，例：文章内容、评论、描述等\n示例： TextField(null=True, blank=True, default=\u0026quot;This is a text field.\u0026quot;, help_text=\u0026quot;The user's biography.\u0026quot;)\n数字字段 参数：\nmax_digits: 数字的最大位数。 decimal_places: 小数点后的位数。 null: 是否允许字段为空。 blank: 是否允许字段为空白字符串。 default: 字段的默认值。 help_text: 字段的帮助文本。 IntegerField： 存储整数，例：年龄、数量、ID 等\n示例： IntegerField(max_digits=10, decimal_places=2, null=True, blank=True, default=21, help_text=\u0026quot;The user's age.\u0026quot;)\nFloatField： 存储浮点数，例：价格、折扣、百分比等\n示例： FloatField(max_digits=10, decimal_places=2, null=True, blank=True, default=3.14, help_text=\u0026quot;The user's height.\u0026quot;)\nDecimalField： 存储定点数，例：货币金额、利率、税率等\n示例： DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, default=100.00, help_text=\u0026quot;The user's salary.\u0026quot;)\n日期和时间字段 参数：\nauto_now: 是否在每次保存模型时自动更新字段值。 auto_now_add: 是否在创建模型时自动更新字段值。 DateField： 存储日期，例：出生日期、入职日期、截止日期等\n示例： DateField(auto_now=True, null=True, blank=True, help_text=\u0026quot;The user's birthday.\u0026quot;)\nTimeField： 存储时间，例：上课时间、下班时间、营业时间等\n示例： TimeField(auto_now=True, null=True, blank=True, help_text=\u0026quot;The user's work start time.\u0026quot;)\nDateTimeField： 存储日期和时间，例：活动时间、会议时间、发布时间等\n示例： DateTimeField(auto_now=True, null=True, blank=True, help_text=\u0026quot;The user's last login time.\u0026quot;)\n布尔字段 参数：\nnull: 是否允许字段为空。 blank: 是否允许字段为空白字符串。 default: 字段的默认值。 help_text: 字段的帮助文本。 BooleanField： 存储布尔值，例如 True 或 False，例：是否启用、是否删除、是否同意等\n示例： BooleanField(null=True, blank=True, default=False, help_text=\u0026quot;The user is active.\u0026quot;)\n外键字段 参数：\nto: 关联的模型类。 on_delete: 当关联的模型被删除时，对当前模型的操作。 null: 是否允许字段为空。 blank: 是否允许字段为空白字符串。 related_name: 反向关联的名称。 help_text: 字段的帮助文本。 ForeignKey： 用于建立两个模型之间的关系，例：用户和订单、课程和学生、商品和类别等\n示例： ForeignKey(to=User, on_delete=models.CASCADE, null=True, blank=True, related_name=\u0026quot;orders\u0026quot;, help_text=\u0026quot;The user's orders.\u0026quot;)\n多对多字段 参数：\nto: 关联的模型类。 through: 中间表模型 (可选)。 related_name: 反向关联的名称。 help_text: 字段的帮助文本。 ManyToManyField： 用于建立两个模型之间的多对多关系，例：学生和课程、老师和课程、角色和权限等\n示例： ManyToManyField(to=Course, through=\u0026quot;CourseEnrollment\u0026quot;, related_name=\u0026quot;students\u0026quot;, help_text=\u0026quot;The courses the user is taking.\u0026quot;)\n文件字段 参数：\nupload_to: 上传文件的目录。 max_length: 文件的最大长度。 null: 是否允许字段为空。 blank: 是否允许字段为空白字符串。 help_text: 字段的帮助文本。 FileField： 存储文件，例：头像、照片、附件等\n示例： FileField(upload_to=\u0026quot;avatars/\u0026quot;, max_length=255, null=True, blank=True, help_text=\u0026quot;The user's avatar.\u0026quot;)\nImageField： 存储图片文件，例：商品图片、风景图片、证件照等\n示例： ImageField(upload_to=\u0026quot;images/\u0026quot;, max_length=255, null=True, blank=True, help_text=\u0026quot;The user's profile picture.\u0026quot;)\n枚举字段 参数：\nchoices: 可选值的列表。 null: 是否允许字段为空。 blank: 是否允许字段为空白字符串。 default: 字段的默认值。 help_text: 字段的帮助文本。 ChoiceField： 存储有限选项的值，例：性别、状态、类型、颜色等\n示例： ChoiceField(choices=((\u0026quot;male\u0026quot;, \u0026quot;Male\u0026quot;), (\u0026quot;female\u0026quot;, \u0026quot;Female\u0026quot;)), null=True, blank=True, default=\u0026quot;male\u0026quot;, help_text=\u0026quot;The user's gender.\u0026quot;)\nJSON 字段 参数：\nnull: 是否允许字段为空。 blank: 是否允许字段为空白字符串。 default: 字段的默认值。 help_text: 字段的帮助文本。 JSONField： 存储 JSON 格式的数据，例：用户设置、地址信息、产品参数等\n示例： JSONField(null=True, blank=True, default={\u0026quot;age\u0026quot;: 21, \u0026quot;gender\u0026quot;: \u0026quot;male\u0026quot;}, help_text=\u0026quot;The user's additional information.\u0026quot;)\n参考链接：\n1、Django文档：模型字段参考\n","date":"2024-03-20T11:05:32+08:00","image":"https://biubiuww.github.io/post/2024/pic/django-web-logo.png","permalink":"https://biubiuww.github.io/post/2024/03/1/","title":"记录django中模型常见字段与参数"}]